.article-container:hover > .star-icon {
    visibility: visible;
    opacity: 1;
}
.star-icon:hover > svg {
    transform: scale(115%);
    transform-origin: center;
}

.article-container.article-static > .article-fallback {
    animation: fadeInArticleFallback 0.1s ease-in 0.3s;
    animation-fill-mode: both;
}
@keyframes fadeInArticleFallback {
    from {
        visibility: hidden;
        opacity: 0;
    }
    to {
        visibility: visible;
        opacity: 1;
    }
}

/* animations sometimes skip when using transition */
/* .article-static.is-hover {
    animation: rotateArticle 0.2s ease-in-out;
    animation-fill-mode: forwards;
}
.article-static.is-hover.rotate-neg {
    animation-name: rotateArticleNeg;
}
@keyframes rotateArticle {
    to {
        transform: rotate(1.5deg);
    }
}
@keyframes rotateArticleNeg {
    to {
        transform: rotate(-1.5deg);
    }
}
.article-static.hover-leave {
    animation: rotateArticleReverse 0.2s ease-in-out;
}
.article-static.hover-leave.rotate-neg {
    animation-name: rotateArticleReverseNeg;
}
@keyframes rotateArticleReverse {
    from {
        transform: rotate(1.5deg);
    }
    to {
        transform: rotate(0);
    }
}
@keyframes rotateArticleReverseNeg {
    from {
        transform: rotate(-1.5deg);
    }
    to {
        transform: rotate(0);
    }
} */

.article-gradient {
    backdrop-filter: blur(10px);

    /* gradient & backdrop-filter only seem to work together using mask-image */
    background-image: inherit;
    background-size: cover;
    mask-image: linear-gradient(
        180deg,
        rgba(0, 0, 0, 1) 0%,
        rgba(0, 0, 0, 1) 85%,
        rgba(0, 0, 0, 0) 95%
    );
}

.article-gradient.with-quotes {
    mask-image: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 1) 0%,
        rgba(0, 0, 0, 1) 40%,
        rgba(0, 0, 0, 0) 60%
    );
}

.progress {
    width: var(--progress);
    animation: expandWidth 100ms ease-out;
    animation-fill-mode: both;
}
@keyframes expandWidth {
    from {
        width: 0;
    }
    to {
        width: var(--progress);
    }
}

/* stacked list */
.stacked-articles-list > .article-container {
    transition: transform 0.3s cubic-bezier(0.33, 1, 0.68, 1);
}
.stacked-articles-list:hover > .article-container {
    transform: translate(0, 0) rotate(0) !important;
    z-index: 200 !important;
}

/* dropdown */
.dropdown-icon[data-state="open"] {
    transform: scaleY(-1) scale(110%);
}
.dropdown-content[data-state="open"] {
    animation: fadeInDropdown 200ms cubic-bezier(0.33, 1, 0.68, 1); /* easeOutCubic */
}
.dropdown-content[data-state="closed"] {
    animation: fadeOutDropdown 200ms cubic-bezier(0.33, 1, 0.68, 1); /* easeOutCubic */
}
@keyframes fadeInDropdown {
    from {
        visibility: hidden;
        opacity: 0;
        transform: translate3d(0, 15px, 0);
    }
    to {
        visibility: visible;
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes fadeOutDropdown {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

/* highlight */
/* .highlight > .info-bar {
    visibility: hidden;
    opacity: 0;
    transition: opacity 200ms cubic-bezier(0.33, 1, 0.68, 1);
}
.highlight:hover > .info-bar {
    visibility: visible;
    opacity: 1;
} */
